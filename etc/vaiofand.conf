## Configuration file for vaiofand, the Sony Vaio fan controller ##

# File syntax:
# Lines starting with hash marks are taken as comments, empty lines are
# ignored. Variables should be set in the fashion <name> = <value>
# on a separate line with no white space at its beginning.

# Please note that you do not have to restart vaiofand when you make
# changes to this config file. Vaiofand continuously monitors the file
# and reloads the configuration as soon as a change is made.

# Vaiofand offers five basic configuration options and four extra:
#
# 1. temperature_units
# 2. max_temperature
# 3. cooled_temperature
# 4. idle_speed
# 5. sleeptime
#
# 6. off_temperature
# 7. max_speed
# 8. critical_temperature
#
# 9. debug
#
# All these options have to be set in this file, otherwise vaiofand will
# refuse to run. Options 6 to 8 control expert features which are
# disabled by default.

## BASIC PARAMETERS ##

# To indicate the meaning of the basic configuration parameters, let us
# first outline the standard running of vaiofand: The process wakes up
# every `sleeptime' milliseconds and sets the fan speed to `idle_speed',
# thus overriding the fan settings made by the BIOS. However, if the
# temperature reaches `max_temperature', vaiofand hands over the control
# back to the BIOS and waits until the temperature drops back down to
# `cooled_temperature', when it starts maintaining `idle_speed' again.

# 1. temperature_units
# Vaiofand can operate in terms of degrees Celsius and Fahrenheit or
# Kelvins. All temperatures set later in this file are assumed to be in
# the units specified here.
# * Accepted values: C, F and K
# * Default: C
temperature_units = C

# 2. max_temperature: temperature above which the fan should be let spin
# at the speed set by the BIOS
# * Accepted values: integers between 50 and 80 (if `temperature_units'
#   are set to C), between 122 and 176 (for F), or between 323 and 353
#   (for K)
# * Default: 72 (in C, equivalent to 161 F and 345 K)
max_temperature = 60

# 3. cooled_temperature: temperature at which vaiofand should reclaim
# the control from the BIOS and start maintaining low fan speed again
# * Accepted values: positive integers less than `max_temperature' (by
#   at least 1 C or 2 F)
# * Default: 59 (in C, equivalent to 138 F and 332 K)
cooled_temperature = 50

# 4. idle_speed: speed at which the fan should be maintained
# The fans tend to be quite inaudible at speeds around 20, so there is
# usually no need to turn them off completely by setting this to 0.
# * Accepted values: integers between 0 (fan off) and 255 (furious
#   speed)
# * Default: 17
idle_speed = 20

# 5. sleeptime: delays between subsequent slowdowns of the fan (in
# milliseconds)
# Please note that this parameter is very delicate to find the most
# appropriate value of. If set too high, the BIOS manages to kick in
# during the intervals when vaiofand is idle, which results in constant
# slow-downs and spin-ups of the fan. On the other hand, too high
# a value results in a larger number of CPU interrupts, which has
# a negative impact on battery life. A compromise has to be found here.
#
# It should be also noted that the optimal value is usually different
# for different values of `idle_speed'. Hence, a specific value has to
# be found to match each user's particular preferences and also laptop
# model.
# * Accepted values: positive integers
# * Default: 110 (in ms)
sleeptime = 110

## EXTRA PARAMETERS ##

# 6. off_temperature: letting BIOS stop the fan at low temperatures
# (works on selected models only)
# When a certain fairly low temperature is reached, some BIOSes turn the
# fan off completely. However, this cannot be detected by vaiofand, and
# hence the daemon will carry on overriding the settings made by the
# BIOS and unnecessarily maintaining the speed at `idle_speed'.
# Therefore, you can instruct vaiofand to suspend its actions and let
# the BIOS do the work once the temperature drops below
# `off_temperature'. Vaiofand will then wait for the fan to actually
# stop, and afterwards it will automatically resume as soon as the
# temperature rises back and the BIOS spins the fan up again.
# The temperature at which the BIOS stops the fan varies among
# particular laptops. To find out the correct value for your piece, you
# can run the helper programme vaiofand-monit while slowly cooling down
# your laptop (a fridge might come in handy here). Vaiofand-monit will
# monitor the fan, and once it stops, it will output the recommended
# value of `off_temperature'. (Vaiofand-monit can operate in all
# supported temperature units. Run "vaiofand-monit --help" for details.)
# After plugging the resulting value into your config file, try running
# vaiofand once in `debug' mode to verify that everything is working as
# expected.
# On some models the optimal value for this option is around 43 C
# (109 F, 316 K). However, many models do not turn the fan off at all.
#
# By default, this parameter is set to the freezing point, and the
# feature is thus effectively disabled.
# * Accepted values: non-negative integers less or equal to
#   `cooled_temperature'
# * Default: 0 (in C, equivalent to 32 F and 273 K)
off_temperature = 0

# The following two options (`high_speed' and `critical_temperature')
# are intended only for those users who have the opposite problem to
# most Vaio users: their fan is running too slow and their system is
# overheating. Instead of slowing the fan down, these users need to make
# it spin faster to ensure proper cooling of their system. This is
# usually because their fan is faulty, they overclocked their CPU or
# replaced it with a more powerful one.
#
# Here is how these two options can be used:
# If the temperature reaches the `max_temperature' threshold and
# `high_speed' is set to 0, then vaiofand will behave as described
# before, i.e., it will hand over the fan control to the BIOS. However,
# if `high_speed' is set to a positive integer (at least 120 is
# required), then vaiofand will actively maintain the fan speed at
# `high_speed' instead. Should the temperature rise even further,
# vaiofand will automatically linearly increase the fan speed in a way
# that when `critical_temperature' is reached, the fan will spin at the
# maximum possible speed of 255. This is to prevent potential system
# damage caused by `high_speed' being set positive but too low.

# 7. high_speed: fan speed at which the system should be cooled when
# `max_temperature' is reached
# * Accepted values: either 0 (letting the BIOS control the fan), or an
#   integer between 120 and 255, and greater than `idle_speed'
# * Default: 0
high_speed = 0

# 8. critical_temperature: temperature at which the fan should spin at
# the maximum possible speed
# * Accepted values: integers greater than `max_temperature' and less
#   than or equal to 85 (in C, equivalent to 185 F and 358 K)
# * Default: 85 (in C, equivalent to 185 F and 358 K)
critical_temperature = 85

## DEBUGGING ##

# 9. debug
# If `debug' is set to "yes", vaiofand logs information about all its
# actions into syslog, using facility daemon and priority debug. These
# messages usually end up in /var/log/daemon.log, depending on your
# system settings. Alternatively, if you start vaiofand with option
# --no-daemon, the messages will be printed directly to stderr.
#
# You may want to turn the debugging on when you are tuning the values
# of `max_temperature', `cooled_temperature' and `off_temperature', or
# if you just want to keep an eye on what vaiofand is actually doing
# with your laptop.
# * Accepted values: yes, no
# * Default: no
debug = no
